---
import Avatar from "./Avatar.astro";
import Clock from "./navbar/Clock.astro";
import BurgerButton from "./BurgerButton.astro";
import DesktopNavbar from "./navbar/DesktopNavbar.astro";
import MobileNavbar from "./navbar/MobileNavbar.astro";
import ThemeToggle from "./ThemeToggle.astro"
import WorkBadge from "./WorkBadge.astro";
---

<header class="sticky top-0 backdrop-blur-sm z-50 header">
  <div class="px-4 py-4 mx-auto max-w-[1120px] w-full">
    <div class="flex items-center justify-between md:gap-x-8">  
      <div class="flex items-center gap-x-4">
        <Avatar />
        <WorkBadge />
      </div>
      <!-- <ThemeToggle />-->
      <Clock class="hidden md:block" />
      <DesktopNavbar class="hidden md:block" />
      <BurgerButton class="md:hidden" />
    </div>
  </div>
  <MobileNavbar />
</header>

<style>
  .header {
    transition: border-bottom 0.3s ease-in-out;
    /* background: rgba(120, 119, 198, 0.3); */
  }
</style>

<script>
  const menuButton = document.getElementById("menu-toggle");
  const mobileMenu = document.getElementById("mobile-menu");
  const sidebarLinks = mobileMenu?.querySelectorAll("a");
  const languagePicker = mobileMenu?.querySelector("#language-select");

  function toggleMobileMenu() {
    const isExpanded = menuButton?.getAttribute("aria-expanded") === "true";
    menuButton?.setAttribute("aria-expanded", String(!isExpanded));
    mobileMenu?.classList.toggle("hidden");
    mobileMenu?.classList.toggle("-translate-x-full");
    mobileMenu?.classList.toggle("translate-x-0");
  }

  function initLanguagePicker() {
    if (!languagePicker) return;
    console.log("Initializing Language Picker:", languagePicker); // Debugging

    languagePicker.removeEventListener("change", onChangeLanguage);

    languagePicker.addEventListener("change", onChangeLanguage);
  }

  function onChangeLanguage(event) {
    const selectedValue = event.target.value;
    if (selectedValue) {
      window.location.href = selectedValue;
    }
  }

  if (menuButton && mobileMenu) {
    menuButton.addEventListener("click", () => {
      toggleMobileMenu();
      initLanguagePicker();
    });
  }

  if (sidebarLinks) {
    sidebarLinks.forEach((link) => {
      link.addEventListener("click", (event) => {
        event.preventDefault();
        toggleMobileMenu();
        window.location.href = link.href;
      });
    });
  }

  document.addEventListener("click", (event) => {
    const isMenuOpen = menuButton?.getAttribute("aria-expanded") === "true";

    if (
      isMenuOpen &&
      mobileMenu &&
      !mobileMenu.contains(event.target) &&
      !menuButton.contains(event.target)
    ) {
      menuButton?.setAttribute("aria-expanded", "false");
      mobileMenu.classList.add("hidden");
      mobileMenu.classList.add("-translate-x-full");
      mobileMenu.classList.remove("translate-x-0");
    }
  });

  const header = document.querySelector(".header");
  window.addEventListener("scroll", () => {
    if (window.scrollY > 0) {
      header?.classList.add("border-b", "border-gray-600");
    } else {
      header?.classList.remove("border-b", "border-gray-600");
    }
  });

  document.addEventListener("astro:page-load", () => {
    initLanguagePicker();
  });
</script>

